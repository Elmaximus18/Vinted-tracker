import os
import requests
import logging
import time
from telegram import Bot

# üîß Configuration des variables d'environnement
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")
VINTED_SESSION = os.getenv("VINTED_SESSION")

# üîç V√©rification des tokens
if not TELEGRAM_TOKEN or not TELEGRAM_CHAT_ID:
    print("‚ùå ERREUR : TELEGRAM_TOKEN ou TELEGRAM_CHAT_ID non d√©fini !")
    exit(1)

if not VINTED_SESSION:
    print("‚ùå ERREUR : VINTED_SESSION non d√©fini !")
    exit(1)

# üõ†Ô∏è Initialisation du bot Telegram
bot = Bot(token=TELEGRAM_TOKEN)

# üìù Liste des annonces d√©j√† envoy√©es pour √©viter les doublons
seen_items = set()

# üöÄ Fonction d'envoi de notification Telegram
def send_telegram_notification(message):
    """Envoie une notification Telegram."""
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        data = {"chat_id": TELEGRAM_CHAT_ID, "text": message}
        response = requests.post(url, json=data)
        
        if response.status_code == 200:
            print(f"‚úÖ Message envoy√© : {message}")
        else:
            print(f"‚ùå ERREUR - Envoi √©chou√© (Code {response.status_code}) : {response.text}")

    except Exception as e:
        print(f"‚ùå ERREUR - √âchec de l'envoi : {e}")

# üîç Fonction pour r√©cup√©rer les annonces Vinted
def search_vinted():
    """R√©cup√®re les annonces PS1 √† 10‚Ç¨ max depuis Vinted."""
    url = "https://www.vinted.fr/api/v2/catalog/items"
    params = {
        "search_text": "PS1",
        "price_to": 10,
        "order": "newest_first",
        "per_page": 5
    }
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)",
        "Cookie": f"VINTED_SESSION={VINTED_SESSION}"
    }
    
    response = requests.get(url, params=params, headers=headers)

    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ {len(data.get('items', []))} annonces trouv√©es")
        return data.get("items", [])
    elif response.status_code == 401:
        print("‚ùå ERREUR - Authentification √©chou√©e, v√©rifie le cookie VINTED_SESSION.")
    elif response.status_code == 403:
        print("‚ùå ERREUR - Acc√®s refus√©, v√©rifie l'User-Agent ou le cookie.")
    else:
        print(f"‚ùå ERREUR - Code {response.status_code} : {response.text}")

    return []

# üîÑ Boucle principale du bot
if __name__ == "__main__":
    print("‚úÖ Le bot tourne correctement !")

    while True:
        results = search_vinted()
        
        for item in results:
            item_id = item["id"]
            title = item["title"]
            price = item["price"]["amount"]
            url = f"https://www.vinted.fr{item['path']}"

            # V√©rifie si l'annonce a d√©j√† √©t√© envoy√©e
            if item_id not in seen_items:
                seen_items.add(item_id)
                message = f"üî• Nouveau produit trouv√© : {title}\nüí∞ Prix : {price}‚Ç¨\nüîó Lien : {url}"
                send_telegram_notification(message)

        print("üîÑ Fin du cycle, prochaine v√©rification dans 60 secondes...\n")
        time.sleep(60)  # Attendre 60 secondes avant de relancer la recherche
